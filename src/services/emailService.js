// Servi√ßo de email para produ√ß√£o
import emailjs from '@emailjs/browser';

export const enviarCodigoVerificacao = async (email, codigo) => {
  try {
    console.log('üìß ENVIANDO EMAIL REAL:');
    console.log('Para:', email);
    console.log('C√≥digo:', codigo);
    
    // Configura√ß√µes do EmailJS (configurado com seus IDs)
    const serviceId = 'service_d4yzpvb'; // Seu Service ID
    const templateId = 'contact_us'; // Template ID (Contact Us)
    const publicKey = 'hgeWbU3HYilvDzJVL'; // Sua Public Key
    
    // Configura√ß√µes do EmailJS configuradas com sucesso
    
    // Dados do template
    const templateParams = {
      to_email: email,
      verification_code: codigo,
      from_name: 'VENO.AI',
      from_email: 'admin@venoai.xyz',
      message: `Seu c√≥digo de verifica√ß√£o √©: ${codigo}. V√°lido por 5 minutos.`,
      site_url: 'https://venoai.xyz'
    };
    
    // Enviar email via EmailJS
    const result = await emailjs.send(serviceId, templateId, templateParams, publicKey);
    
    console.log('‚úÖ Email enviado com sucesso!', result);
    return { sucesso: true };
    
  } catch (error) {
    console.error('‚ùå Erro ao enviar email:', error);
    return { sucesso: false, erro: error.message };
  }
};

// Fun√ß√£o para modo desenvolvimento (atual)
export const enviarCodigoDesenvolvimento = (email, codigo) => {
  console.log(`üìß C√ìDIGO DE VERIFICA√á√ÉO (Desenvolvimento)`);
  console.log(`Email: ${email}`);
  console.log(`C√≥digo: ${codigo}`);
  
  // Mostrar no alert apenas em desenvolvimento e se permitido
  if (process.env.NODE_ENV === 'development' && process.env.REACT_APP_SHOW_TEST_CODE !== 'false') {
    const mensagem = `üìß C√ìDIGO DE VERIFICA√á√ÉO\n\nEmail: ${email}\nC√≥digo: ${codigo}\n\n‚è∞ V√°lido por 5 minutos\n\n(Modo Desenvolvimento - Em produ√ß√£o seria enviado por email)`;
    alert(mensagem);
  }
  
  return { sucesso: true };
};
